=======
Part 1:
=======
* Each testcase is of 2 marks.

* Give zero marks if test case fails i.e. string "failed" is printed.

* Give 1.5 marks if vm area address range + num pages + permissions are correct.
	Eg:  [0x180201000	0x180202000] #PAGES[1]	R W _

* Give 0.5 marks if count of vm areas is correct.
	Eg: VM_Area:[2]

* 50% marks to be deducted for a test case if any of the following strings are
  present in the output:
	invalid pid
	invalid state
	Div-by-zero
	Bad write address
	Opps.. out of memory for region
	Opps.. free address not in region
	Error in PFN refcounting count
	PageFault:@ pid		
        {Note: Full string will be something like this:
	        PageFault:@ pid %d [RIP: %x] [accessed VA: %x] [error code: %x]
        }
	
	(Sig_Exit) PF Error @	
        {Note: Full string will be something like this: 
	        (Sig_Exit) PF Error @ [RIP: %x] [accessed VA: %x] [error code: %x]
        }




***********************************************************************
***********************************************************************
***********************************************************************




=======
Part 2:
=======
* Each testcase is of 2 marks.

* Give zero marks if test case fails i.e. string "failed" is printed.

*For testcases 1, 3, 5, 8, 10, 11, 12
	* Give 1.5 marks if page fault count is correct.
	Eg:  MMAP_Page_Faults[50]

	* Give 0.5 marks if following string is printed.
		"Reached end of the program"

* In testcases 2, 4, 6, 7, 9, 13, 14, 15

	* Give 0.5 marks if page fault count is correct.
	Eg:  MMAP_Page_Faults[50]

	* Give 0.5 marks if following string is printed.
		"Reached end of the program"

	* Give 1 mark if following line is printed (as per the testcase).

	For testcase 2:
		"do_page_fault: (Sig_Exit) PF Error @ [RIP: 0x100000E0F] [accessed VA: 0x180204000] [error code: 0x7]"

	For testcase 4:
		"do_page_fault: (Sig_Exit) PF Error @ [RIP: 0x100000E4D] [accessed VA: 0x180201000] [error code: 0x4]"

	For testcase 6:
		"do_page_fault: (Sig_Exit) PF Error @ [RIP: 0x100000E7F] [accessed VA: 0x180201000] [error code: 0x4]"


	For testcase 7:
		"do_page_fault: (Sig_Exit) PF Error @ [RIP: 0x100000E50] [accessed VA: 0x180201000] [error code: 0x6]"


	For testcase 9:
		"do_page_fault: (Sig_Exit) PF Error @ [RIP: 0x100000ED5] [accessed VA: 0x180201000] [error code: 0x7]"

		
	For testcase 13:
		"do_page_fault: (Sig_Exit) PF Error @ [RIP: 0x100000DEB] [accessed VA: 0x180202000] [error code: 0x6]"

	For testcase 14:
		"do_page_fault: (Sig_Exit) PF Error @ [RIP: 0x100000DE1] [accessed VA: 0x180201000] [error code: 0x6]"
				

	For testcase 15:
		"do_page_fault: (Sig_Exit) PF Error @ [RIP: 0x100000E37] [accessed VA: 0x180201000] [error code: 0x7]"


* 50% marks to be deducted for a test case if any of the following strings are
  present in the output:
	invalid pid
	invalid state
	Div-by-zero
	Bad write address
	Opps.. out of memory for region
	Opps.. free address not in region
	Error in PFN refcounting count
	PageFault:@ pid		
        {Note: Full string will be something like this:
	        PageFault:@ pid %d [RIP: %x] [accessed VA: %x] [error code: %x]
        }
	
	(Sig_Exit) PF Error @
        {Note: * Full string will be something like this:
	        (Sig_Exit) PF Error @ [RIP: %x] [accessed VA: %x] [error code: %x]

            * This string is expected to be printed once for testcase 2, 4, 6
              ,7, 9, 13, 14, 15 (as mentioned above).
        }




***********************************************************************
***********************************************************************
***********************************************************************




=======
Part 3:
=======
* Testcases 1 to 5 are of 2 marks.
* Testcases 6 to 15 are of 3 marks.
* No partial marking for this part i.e. Output of each testcase should match
  exactly with the provided expected output.




:)
